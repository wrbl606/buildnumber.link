---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Your build number source">
	<main>
		<h1>
			Use <code class="instructions">buildnumber.link/:appId</code> to:
		</h1>
		<ul class="reasons">
			<li>
				avoid finicky <a href="https://stackoverflow.com/a/60067489/5503956"
					>pipeline-based build numbers</a
				>,
			</li>
			<li>
				prevent <a href="https://stackoverflow.com/a/38847981/5503956"
					>locking yourself out of future app updates</a
				> (<a href="https://duckduckgo.com/?q=epoch+converter+2000000000"
					>2033 is closer than you may think</a
				>).
			</li>
		</ul>

		<h2>API</h2>
		<div class="api-element">
			<p>
				<code class="instructions">GET buildnumber.link/:appId</code> to get the
				current build number.
			</p>
			<pre>
$ curl https://buildnumber.link/test.app.identifier
42</pre>
		</div>
		<div class="api-element">
			<p>
				<code class="instructions">POST buildnumber.link/:appId</code> to get the
				next build number.
			</p>
			<pre>
$ curl --data '' https://buildnumber.link/test.app.identifier
43</pre>
		</div>
		<p>Parameters</p>
		<ul>
			<li>
				<code class="instructions">offset</code> â€” an integer to be added to the
				command output (yes, it can be negative, you joker)
			</li>
		</ul>

		<h2>FAQ</h2>
		<p class="question">But I already have a build number</p>
		<p class="answer">
			Use <code>?offset=:currentBuildNumber</code> query parameter
		</p>
		<p class="question">
			I donâ€™t want to leak any internal build process details
		</p>
		<p class="answer">
			The service is just storing an <code>:appId -> :buildNumber</code> map (yes,
			itâ€™s a potential race-condition issue, please restrain yourself from making
			multiple requests in the same microsecond). We donâ€™t have a budget to spy on
			you, also, you can check <a
				href="https://github.com/wrbl606/buildnumber.link">the source</a
			>.
		</p>
		<p class="question">How do you prevent unauthorised build number bumps?</p>
		<p class="answer">
			Make sure your <code>:appId</code> is at least 10 characters long (yes, you
			can use emojis) so itâ€™s impossible to bruteforce it. You can make sure that
			your <code>:appId</code> is different from the one visible in published store
			pages.
		</p>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.question {
		font-weight: 600;
	}
	.question:nth-of-type(2) {
		padding-top: 0.1em;
	}
	.api-element:nth-of-type(2) {
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 2rem;
		font-weight: 700;
		line-height: 1;
		margin-bottom: 1em;
	}
	h2 {
		font-size: 1.4rem;
		font-weight: 700;
		line-height: 1;
		margin-top: 1.4em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		background: gray;
		margin-left: 0.4rem;
		margin-right: 0.4rem;
		border-radius: 4px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	pre {
		background: rgba(var(--accent-light), 12%);
		overflow: scroll;
		border-radius: 4px;
		padding: 0.3em 0.6em;
	}
	.reasons {
		list-style-type: symbols("ðŸ’©");
	}
	a:link,
	a:visited {
		color: var(--accent);
	}
</style>
